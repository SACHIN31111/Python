# String Function
name ="rAMALINGAREDDY"
print(len(name))   #length
print(name.endswith("DDY"))
print(name.startswith("RAMA"))
print(name.capitalize())
print(name.find("D"))
print(f"'{name}'")  # This will show if there are extra spaces.
print(name.count("D"))
print(name.replace("D","Z"))


# 1. Length & Searching
# len(s) â†’ Returns the length of the string.
# s.startswith(substring) â†’ Checks if the string starts with the given substring.
# s.endswith(substring) â†’ Checks if the string ends with the given substring.
# s.find(substring) â†’ Returns the index of the first occurrence of the substring, or -1 if not found.
# s.rfind(substring) â†’ Returns the index of the last occurrence of the substring.
# s.count(substring) â†’ Returns the number of occurrences of a substring.
# 2. Modification & Formatting

# s.upper() â†’ Converts the string to uppercase.
# s.lower() â†’ Converts the string to lowercase.
# s.title() â†’ Converts the first character of each word to uppercase.
# s.capitalize() â†’ Capitalizes the first character of the string.
# s.strip() â†’ Removes leading and trailing spaces.
# s.lstrip() â†’ Removes leading spaces.
# s.rstrip() â†’ Removes trailing spaces.
# s.replace(old, new) â†’ Replaces occurrences of old with new.
# s.split(separator) â†’ Splits the string into a list based on the separator.
# s.join(iterable) â†’ Joins elements of an iterable into a single string using s as the separator.
# 3. Checking Content

# s.isalpha() â†’ Returns True if all characters are letters.
# s.isdigit() â†’ Returns True if all characters are digits.
# s.isalnum() â†’ Returns True if all characters are alphanumeric (letters and numbers).
# s.isspace() â†’ Returns True if the string consists of only whitespace characters.
# s.islower() â†’ Returns True if all characters are lowercase.
# s.isupper() â†’ Returns True if all characters are uppercase.
# s.istitle() â†’ Returns True if the string is title-cased.
# 4. String Alignment

# s.center(width, char) â†’ Centers the string using char as padding.
# s.ljust(width, char) â†’ Left-aligns the string using char as padding.
# s.rjust(width, char) â†’ Right-aligns the string using char as padding.
# s.zfill(width) â†’ Adds leading zeros to make the string width characters long.
# 5. Encoding & Decoding
# s.encode(encoding) â†’ Encodes the string into bytes.
# s.decode(encoding) â†’ Decodes bytes into a string.
# Would you like examples for any specific function? ðŸ˜ŠðŸš€